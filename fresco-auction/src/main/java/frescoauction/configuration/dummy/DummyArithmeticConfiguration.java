package frescoauction.configuration.dummy;

import dk.alexandra.fresco.framework.sce.evaluator.EvaluationStrategy;
import lombok.Builder;
import lombok.Getter;
import lombok.ToString;
import frescoauction.configuration.ProtocolConfiguration;
import frescoauction.util.Utils;

/**
 * Provides a configuration for {@link Utils.ProtocolSuite#DummyArithmetic}.
 * That can be build with a Builder which is generated by the Project Lombok library.<br>
 * <pre>{@code
 * // default configuration (usage example)
 * ProtocolConfiguration config = DummyArithmeticConfiguration.builder()
 *         .maxBatchSize(DEFAULT_MAX_BATCH_SIZE)
 *         .maxBitLength(DEFAULT_MAX_BIT_LENGTH)
 *         .fixedPointPrecision(DEFAULT_FIXED_POINT_PRECISION)
 *         .evaluationStrategy(EvaluationStrategy.SEQUENTIAL)
 *         .modulus(DEFAULT_MODULUS)
 *         .build();
 * // is same as:
 * ProtocolConfiguration config = DummyArithmeticConfiguration.builder()
 *         .build();
 * }</pre>
 */
@Builder
@ToString
@Getter
public class DummyArithmeticConfiguration implements ProtocolConfiguration {
    /** Default bit length (is used in default configuration).*/
    public static final int DEFAULT_MAX_BIT_LENGTH = 64;
    /** Default fixed point precision (is used in default configuration).*/
    public static final int DEFAULT_FIXED_POINT_PRECISION = 16;
    /**Default modulus (is used in default configuration).*/
    public static final String DEFAULT_MODULUS = "67039039649712985497870124991238141152738485774711365274259660130265015367064643"
            + "54255445443244279389455058889493431223951165286470575994074291745908195329";

    /** Batch size. Default configuration: {@link #DEFAULT_MAX_BATCH_SIZE}.*/
    @Builder.Default
    private int maxBatchSize = DEFAULT_MAX_BATCH_SIZE;

    /** Bit length. Default configuration: {@link #DEFAULT_MAX_BIT_LENGTH}.*/
    @Builder.Default
    private int maxBitLength = DEFAULT_MAX_BIT_LENGTH;

    /** Fixed point precision. Default configuration: {@link #DEFAULT_FIXED_POINT_PRECISION}.*/
    @Builder.Default
    private int fixedPointPrecision = DEFAULT_FIXED_POINT_PRECISION;

    /** Evaluation strategy. Default configuration: {@link EvaluationStrategy#SEQUENTIAL}.*/
    @Builder.Default
    private EvaluationStrategy evaluationStrategy = EvaluationStrategy.SEQUENTIAL;

    /** Modulus. Default configuration: {@link #DEFAULT_MODULUS}.*/
    @Builder.Default
    private String modulus = DEFAULT_MODULUS;

    private DummyArithmeticConfiguration(int maxBatchSize, int maxBitLength, int fixedPointPrecision,
                                         EvaluationStrategy evaluationStrategy, String modulus) {
        this.maxBatchSize = maxBatchSize;
        this.maxBitLength = maxBitLength;
        this.fixedPointPrecision = fixedPointPrecision;
        this.evaluationStrategy = evaluationStrategy;
        this.modulus = modulus;
    }
}
